<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abc3355.abc_wms_system.orderProcess.model.dao.OrderProcessMapper">

<!-- 전체 주문 조회 -->
<select id="selectAllOrders" resultType="com.abc3355.abc_wms_system.orderProcess.model.dto.OrderListResDTO">
    SELECT a.ORDER_NO, b.USER_ID, d.WH_NAME, a.ORDER_PRICE, c.ORDER_STATUS_NAME, a.ORDER_DATE, a.ORDER_DETAIL
    FROM order_product a
        LEFT JOIN user b ON a.USER_NO = b.USER_NO
        JOIN order_status c ON a.ORDER_STATUS_NO = c.ORDER_STATUS_NO
        JOIN warehouse_inf d ON b.WH_ID = d.WH_ID
    ORDER BY a.ORDER_DATE
</select>

<!-- 가맹점별 조회 -->
<select id="selectOrdersByName" parameterType="String"
        resultType="com.abc3355.abc_wms_system.orderProcess.model.dto.OrderListResDTO">
    SELECT a.ORDER_NO, b.USER_ID, d.WH_NAME, a.ORDER_PRICE, c.ORDER_STATUS_NAME, a.ORDER_DATE, a.ORDER_DETAIL
    FROM order_product a
        LEFT JOIN user b ON a.USER_NO = b.USER_NO
        JOIN order_status c ON a.ORDER_STATUS_NO = c.ORDER_STATUS_NO
        JOIN warehouse_inf d ON b.WH_ID = d.WH_ID
    WHERE d.WH_NAME = #{name}
    ORDER BY a.ORDER_DATE
</select>

<!-- 주문 타입별 조회 -->
<select id="selectOrdersByStatus" parameterType="String"
        resultType="com.abc3355.abc_wms_system.orderProcess.model.dto.OrderListResDTO">
    SELECT a.ORDER_NO, b.USER_ID, d.WH_NAME, a.ORDER_PRICE, c.ORDER_STATUS_NAME, a.ORDER_DATE, a.ORDER_DETAIL
    FROM order_product a
        LEFT JOIN user b ON a.USER_NO = b.USER_NO
        JOIN order_status c ON a.ORDER_STATUS_NO = c.ORDER_STATUS_NO
        JOIN warehouse_inf d ON b.WH_ID = d.WH_ID
    WHERE c.order_status_name = #{status}
    ORDER BY a.ORDER_DATE
</select>

<!-- 전체 조회 (가맹점) -->
<select id="selectMyOrders" parameterType="String"
        resultType="com.abc3355.abc_wms_system.orderProcess.model.dto.OrderListResDTO">
    SELECT a.ORDER_NO, b.USER_ID, d.WH_NAME, a.ORDER_PRICE, c.ORDER_STATUS_NAME, a.ORDER_DATE, a.ORDER_DETAIL
    FROM order_product a
        LEFT JOIN user b ON a.USER_NO = b.USER_NO
        JOIN order_status c ON a.ORDER_STATUS_NO = c.ORDER_STATUS_NO
        JOIN warehouse_inf d ON b.WH_ID = d.WH_ID
    WHERE b.USER_ID = #{userId}
    ORDER BY a.ORDER_DATE
</select>

<!-- 상태별 조회 (가맹점) -->
<select id="selectMyOrdersByStatus" parameterType="Map"
        resultType="com.abc3355.abc_wms_system.orderProcess.model.dto.OrderListResDTO">
    SELECT a.ORDER_NO, b.USER_ID, d.WH_NAME, a.ORDER_PRICE, c.ORDER_STATUS_NAME, a.ORDER_DATE, a.ORDER_DETAIL
    FROM order_product a
    LEFT JOIN user b ON a.USER_NO = b.USER_NO
    JOIN order_status c ON a.ORDER_STATUS_NO = c.ORDER_STATUS_NO
    JOIN warehouse_inf d ON b.WH_ID = d.WH_ID
    WHERE b.USER_ID = #{userId}
    AND a.ORDER_STATUS_NO = #{status}
    ORDER BY a.ORDER_DATE
</select>

<!-- 상세 주문 조회 -->
<select id="selectOrderDetails" parameterType="int"
        resultType="com.abc3355.abc_wms_system.orderProcess.model.dto.OrderDetailResDTO">
    SELECT * FROM order_details WHERE ORDER_NO = #{orderNo}
</select>

<!-- 주문 상태 변경 -->
<update id="updateOrderStatus" parameterType="int">
    UPDATE order_product
    SET ORDER_STATUS_NO = #{orderStatusNo}
    WHERE ORDER_NO = #{orderNo}
</update>

<!-- 주문 취소 사유 입력 -->
<update id="updateOrderString" parameterType="map">
    UPDATE order_product
    SET ORDER_DETAIL = #{orderDetail}
    WHERE ORDER_NO = #{orderNo}
</update>

<!-- 본사 재고 수량 확인 -->
<select id="getStockAmount" parameterType="int" resultType="java.lang.Integer">
    SELECT INVENTORY_AMOUNT
    FROM inventory
    WHERE PRODUCT_NO = #{productNo}
    AND WH_ID = 1
</select>

<!-- 본사 재고량 변경 (-) -->
<update id="updateHQInventoryAmount" parameterType="map">
    UPDATE inventory
    SET INVENTORY_AMOUNT = INVENTORY_AMOUNT - #{odAmount}
    WHERE PRODUCT_NO = #{productNo}
    AND WH_ID = 1
</update>

<!-- 가맹점 창고에 이미 해당 상품의 정보가 담겨져 있는지 확인 -->
<select id="selectInventoryData" parameterType="map" resultType="int">
    SELECT COUNT(*)
    FROM inventory
    WHERE PRODUCT_NO = #{productNo}
    AND WH_ID = (SELECT a.WH_ID
    FROM user a JOIN order_product b ON a.USER_NO = b.USER_NO
    WHERE b.ORDER_NO = #{orderNo})
</select>

<!-- 가맹점 재고량 변경 (+) -->
<update id="updateBranchesInventoryAmount" parameterType="map">
    UPDATE inventory
    SET INVENTORY_AMOUNT = INVENTORY_AMOUNT + #{odAmount}
    WHERE PRODUCT_NO = #{productNo}
    AND WH_ID = (SELECT a.WH_ID
    FROM user a JOIN order_product b ON a.USER_NO = b.USER_NO
    WHERE b.ORDER_NO = #{orderNo}
    )
</update>

<!-- 가맹점 재고 정보 추가 -->
<insert id="insertBranchesInventoryAmount" parameterType="map">
    INSERT INTO inventory (INVENTORY_AMOUNT, WH_ID, PRODUCT_NO)
    VALUES (#{odAmount}, (SELECT a.WH_ID
    FROM user a JOIN order_product b ON a.USER_NO = b.USER_NO
    WHERE b.ORDER_NO = #{orderNo}), #{productNo});
</insert>

<select id="getOrderDetails" parameterType="int"
        resultType="com.abc3355.abc_wms_system.orderProcess.model.dto.GetOrderDetailDTO">
    SELECT a.OD_NO,
    a.ORDER_NO,
    b.PRODUCT_NAME,
    a.OD_AMOUNT
    FROM order_details a LEFT JOIN product b ON a.PRODUCT_NO = b.PRODUCT_NO
    WHERE a.ORDER_NO = #{orderNo}
</select>

<!-- 상세 주문 삭제 -->
<delete id="deleteOrderDetail" parameterType="map">
    DELETE FROM order_details WHERE OD_NO = #{odNo}
</delete>

<!-- 주문 총액 빼기 -->
<update id="updateOrderPriceMinus" parameterType="map">
    UPDATE order_product
    SET ORDER_PRICE = ORDER_PRICE - #{odAmount} * (SELECT PRODUCT_PRICE
                                                    FROM product
                                                    WHERE PRODUCT_NAME = #{productName})
    WHERE ORDER_NO = #{orderNo}
</update>

<!-- 상세 주문 추가 -->
<insert id="insertOrderDetail" parameterType="map">
    INSERT INTO order_details (OD_AMOUNT, ORDER_NO, PRODUCT_NO) VALUES (#{odAmount}, #{orderNo}, #{productNo})
</insert>

<!-- 주문 총액 더하기 -->
<update id="updateOrderPricePlus" parameterType="map">
    UPDATE order_product
    SET ORDER_PRICE = ORDER_PRICE + #{odAmount} * (SELECT PRODUCT_PRICE
                                                    FROM product
                                                    WHERE PRODUCT_NO = #{productNo})
    WHERE ORDER_NO = #{orderNo}
</update>

<!-- 기존에 총액 더하기 -->
<select id="checkOrderDetail" parameterType="map" resultType="int">
    SELECT COUNT(PRODUCT_NO)
    FROM order_details
    WHERE ORDER_NO = #{orderNo}
</select>

<!-- 기존 주문에 수량 더하기 -->
<update id="updateOrderDetail" parameterType="map">
    UPDATE order_detail
    SET OD_AMOUNT = OD_AMOUNT + #{odAmount}
    WHERE ORDER_NO = #{orderNo}
    AND PRODUCT_NO = #{productNo}
</update>

</mapper>